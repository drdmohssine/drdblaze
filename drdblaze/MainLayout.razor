@inherits LayoutComponentBase
@inject NavigationManager Navigation


<div class="bb-page">
  
    <Sidebar @ref="sidebar" 
             IconName="IconName.Tools"
           
             Title="Blaze"
             DataProvider="SidebarDataProvider" />


             
    <Button  Color="ButtonColor.Success" Class="py-0"
        Style="position:absolute;top:1px;left:1px; width:48px;height:24px;z-index:2"
        role="button" @onclick="ToogleSidebar">
        <Icon Name="IconName.ArrowLeftRight" />
    </Button>

    @Body

</div>

@code {
    Sidebar sidebar;
    IEnumerable<NavItem> navItems;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = Navigation.BaseUri , IconName = IconName.HouseDoorFill, Text = "Home"},
            new NavItem { Id = "2", IconName = IconName.Tools, Text = "Tools", IconColor = IconColor.Primary },
            new NavItem { Id = "3", Href = Navigation.BaseUri +"gptextractor", IconName = IconName.Diagram3, Text = "GPT Extractor", ParentId="2"},
            new NavItem { Id = "4", Href = Navigation.BaseUri +"openfiles", IconName = IconName.File, Text = "Open Files", ParentId="2"},
            new NavItem { Id = "5", Href = Navigation.BaseUri +"networkgrph", IconName = IconName.Tv, Text = "NetworkGrph", ParentId="2"},
            new NavItem { Id = "6", Href = Navigation.BaseUri +"asynccounter", IconName = IconName.Code, Text = "AsyncCounter", ParentId="2"},



        };

        return navItems;
    }
    private void ToogleSidebar() => sidebar.ToggleSidebar();

}